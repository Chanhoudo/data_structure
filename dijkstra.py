# -*- coding: utf-8 -*-
"""Dijkstra.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W3jjlWdlfWKLEcXa2CfU8e9t6DlZbSXH
"""

INF = 9999
def choose_vertex(dist, found) :
  min = INF
  minpos = -1
  for i in range(len(dist)):
    if dist[i] < min and found[i] == False:
      min = dist[i]
      minpos = i
  return minpos

def shortest_path_dijkstra(vtx, adj, start):
  vsize = len(vtx)
  dist = list(adj[start])
  path = [start] * vsize
  found = [False] * vsize
  found[start] = True

  for i in range(vsize):
    print("Step%2d: "%(i+1), dist)
    u = choose_vertex(dist, found)
    found[u] = True

    for w in range(vsize) :
      if not found[w]:
        if dist[u] + adj[u][w] < dist[w]:
          dist[w] = dist[u] + adj[u][w]
          path[w] = u #start에서 이 노드를 오기 위한 가장 짧은 전 노드 저장
  return path

vertex = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
weight = [ [0,      7,    INF,     INF,    3,     10,    INF],
           [7,      0,      4,      10,    2,      6,    INF],
           [INF,    4,      0,       2,    INF,   INF,     INF],
           [INF,    10,     2,       0,     11,     9,      4],
           [3,     2,      INF,     11,     0,      13,     5],
           [10,     6,      INF,     9,      13,     0,      INF],
           [INF,   INF,   INF,   4,      5,      INF,     0]]


start = 0
path = shortest_path_dijkstra(vertex, weight, start)

for end in range(len(vertex)) :
  if end != start :
    print("[최단경로: %s->%s] %s" %
    (vertex[start], vertex[end], vertex[end]), end='')
  while (path[end] != start) :
    print(" <- %s" % vertex[path[end]], end='')
    end = path[end]
    print(" <- %s" % vertex[path[end]])

def shortest_path_dijkstra(vertex, weight, start):
  path = {}
  dist = [0] * len(vertex)
  for i in range(len(vertex)) :
    path[f"{vertex[start]}->{vertex[i]}"] = vertex[start][i]
    dist[i][0](weight[start][i])
    for j in range(len(path)):

INF = 99999

vertex = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
weight = [ [0,      7,    INF,     INF,    3,     10,    INF],
           [7,      0,      4,      10,    2,      6,    INF],
           [INF,    4,      0,       2,    INF,   INF,     INF],
           [INF,    10,     2,       0,     11,     9,      4],
           [3,     2,      INF,     11,     0,      13,     5],
           [10,     6,      INF,     9,      13,     0,      INF],
           [INF,   INF,   INF,   4,      5,      INF,     0]]

start = 0
path = shortest_path_dijkstra(vertex, weight, start)